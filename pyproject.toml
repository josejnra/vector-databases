[tool.poetry]
name = "vector-databases"
version = "0.1.0"
description = ""
authors = ["Jose Assis <josenunesra@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
weaviate-client = "4.7.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.4"
mypy = "^1.11.2"
taskipy = "^1.13.0"

[tool.ruff]
line-length = 88
extend-exclude = ["migrations"]
cache-dir = "/tmp/.ruff_cache"
exclude = ["alembic"]

[tool.ruff.lint]
preview = true
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
    "PL",  # pylint
    "PT",  # flake8-pytest-style
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
preview = true
quote-style = "double"
docstring-code-format = true

[tool.mypy]
exclude = [
    "migrations",
    "test_redis_async.py",
    "generate_er_diagram.py"
]
cache_dir = "/tmp/.mypy_cache"

[tool.taskipy.tasks]
lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
